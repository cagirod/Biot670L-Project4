#!/usr/bin/bash

#This script will
#1) Quality check a set of short-reads with FastQC
#2) Trim the reads with Trimmomatic

#Dependencies
#You should already have pulled the docker images for FastQC and Trimmomatic from:
#https://hub.docker.com/r/pegi3s/fastqc/
#https://hub.docker.com/r/staphb/trimmomatic/
#Make sure Docker Desktop is running

#HELP function
function HELP {
echo ""
echo "Usage:" $0
echo "			-i path/to/dir/			directory holding reads"
echo ""
echo "Example: $0 -i /path/to/dir"
echo ""
exit 0
}

#Take arguments
#Run HELP if -h -? or invalid input
#Set READS to -i
while getopts ":hi:" option; do
	case ${option} in
		h)
		HELP
		;;
		i)
		export READS=${OPTARG}
		;;
		\?)
		echo "Invalid option: ${OPTARG}" 1>&2
		HELP
		;;
	esac
done

#Check if all parameters are filled
if [[ -z "${READS}" ]]; then
	echo ""
	echo "All flags required."
	HELP
fi

#Check if directory exists
if [[ -d ${READS} ]]; then
	echo ""
	echo "Path to reads set to: " $READS
	echo ""
else
	echo ""
	echo "Could not validate directory. Please check and try again."
	HELP
fi

#Quality check reads with FastQC
docker run -t --rm -u $(id -u):$(id -g) -v $(pwd):/data:rw -w /data pegi3s/fastqc -t 6 --extract ${READS}/*.fastq*

#Clean up FastQC files
mkdir -pv ${READS}/fastqc/
rm -r ${READS}/*.zip
mv ${READS}/*_fastqc* ${READS}/fastqc
echo ""

#Get input reads file paths for trimmomatic
read1=$(ls ${READS} | sed -n '/_1/p')
read2=$(ls ${READS} | sed -n '/_2/p')

#Trim reads using trimmomatic
docker run -t --rm -u $(id -u):$(id -g) -v $(pwd):/data:rw staphb/trimmomatic trimmomatic PE ${READS}/${read1} ${READS}/${read2} output_forward_paired.fq.gz output_forward_unpaired.fq.gz output_reverse_paired.fq.gz output_reverse_unpaired.fq.gz ILLUMINACLIP:/Trimmomatic-0.39/adapters/TruSeq3-PE.fa:2:30:10:2:True LEADING:3 TRAILING:3 MINLEN:36

#Clean up trimmomatic output
mkdir -pv ${READS}/trimmomatic0.39/
mv output* ${READS}/trimmomatic0.39/

#for f1 in *_forward_paired.fq.gz; do
   # base=${f1%_forward_paired.fq.gz}  # Strip _R1.fastq.gz, leaving File1, File2, etc
   # f2=${f1%_reverse_paired.fq.gz}_reverse_paired.fq.gz  # add _R2.fastq.gz to get File1_R2.fastq.gz, etc
    ...
#done
#wget https://ftp.ncbi.nlm.nih.gov/genomes/genbank/bacteria/Bacillus_thuringiensis/all_assembly_versions/GCA_021651035.1_ASM2165103v1/GCA_021651035.1_ASM2165103v1_genomic.fna.gz
#find . -name '*.fna' -exec rename 's/\.fna$/.fasta/' \{} \;
#REF = *.fasta

#fastqinfor-2.0.sh must be downloaded into the file
#REF file to be downloaded into the folder 

#Kiu R, fastq-info: compute estimated sequencing depth (coverage) of prokaryotic genomes, GitHub https://github.com/raymondkiu/fastq-info
# modified to output 

$ sh ./fastqinfo-2.sh -r 125 ./trimmomatic0.39/output_forward_paired.fq.gz ./trimmomatic0.39/output_reverse_paired.fq.gz ./01_readfiltering/ref.fasta > coverage.txt








